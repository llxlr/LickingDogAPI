name: Docker Image

on:
  release:
    types: [created]
env:
  IMAGE_NAME: ldapi

jobs:
  dockerhub:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: llxlr/$IMAGE_NAME:latest

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  github:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v2

      - name: Create
        run: |
          # Create Docker Image for Development Environment
          docker build . --file Dockerfile --tag $IMAGE_NAME

      - name: Login
        run: |
          # Log into GitHub Package's Docker Registry
          echo "${{ secrets.GH_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]') # Change all uppercase to lowercase

          #VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')  # Strip git ref prefix from version
          #[[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$VERSION
          #[ "$VERSION" == "master" ] && VERSION=latest  # Use Docker `latest` tag convention

          docker tag $IMAGE_NAME $IMAGE_ID:latest
          docker push $IMAGE_ID:latest  # Push to GitHub Packages
